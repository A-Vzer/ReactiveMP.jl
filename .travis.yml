language: julia

os:
  - linux

notifications:
  email: false

julia:
  - 1.3
  - 1.4
  - 1.5
  - nightly

jobs:
  allow_failures:
    - julia: nightly
  include:
    - stage: test
      script:
        - julia -e 'import Pkg; Pkg.test("ReactiveMP")'
      after_success: skip
    - stage: benchmarks
      julia: 1.5
      script:
        - cd benchmark
        - julia --project=. -e 'using Pkg; Pkg.instantiate()'
        - julia --project=. -e 'using PkgBenchmark; using BenchmarkCI; BenchmarkCI.judge(target = PkgBenchmark.BenchmarkConfig(; id = nothing, juliacmd = `julia -O3`), pkdir = "$(pwd())/../")'
        - julia --project=. -e 'using PkgBenchmark; using BenchmarkCI; BenchmarkCI.displayjudgement()'
        - julia --project=. -e 'using Base64; using BenchmarkCI; BenchmarkCI.pushresult(; url = "git@github.com:biaslab/ReactiveMP.jl.git", title = "Benchmark result (via Travis)", branch = "gh-benchmarks", sshkey = String(Base64.base64decode(ENV["BENCHMARK_KEY"]))); '
        - cd ..
      after_success: skip
    - stage: coverage
      julia: 1.5
      script:
        - julia -e 'import Pkg; Pkg.test("ReactiveMP", coverage=true, julia_args=["--inline=no"])';
        - julia -e 'import Pkg; cd(Pkg.dir("ReactiveMP")); Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'
      after_success: skip
    - stage: documentation
      julia: 1.5
      script:
        - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
        - julia --project=docs/ docs/make.jl
      after_success: skip

stages:
  - test
  - benchmarks
  - coverage
  - documentation